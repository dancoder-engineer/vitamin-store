{"ast":null,"code":"var _jsxFileName = \"/home/dan/code/projects/project4/frontend/src/checkout/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CartItem from './CartItem.js';\nimport GooglePayButton from '@google-pay/button-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart() {\n  _s();\n\n  let [cartItems, setCartItems] = useState([]);\n  let [grandTotal, setGrandTotal] = useState(0.00);\n  useEffect(() => {\n    grabCart();\n  }, []);\n\n  function grabCart() {\n    fetch('/getcart/').then(res => res.json()).then(data => {\n      makeItems(data);\n      makeGrandTotal(data);\n    });\n  }\n\n  let gpButton = /*#__PURE__*/_jsxDEV(GooglePayButton, {\n    className: \"centered\",\n    environment: \"TEST\" //TEST or PRODUCTION\n    ,\n    paymentRequest: {\n      apiVersion: 2,\n      apiVersionMinor: 0,\n      allowedPaymentMethods: [{\n        type: \"CARD\",\n        parameters: {\n          allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n          allowedCardNetworks: [\"MASTERCARD\", \"VISA\"]\n        },\n        tokenizationSpecification: {\n          type: \"PAYMENT_GATEWAY\",\n          parameters: {\n            gateway: \"example\",\n            GatewayMerchantId: \"example\"\n          }\n        }\n      }],\n      merchantInfo: {\n        merchantId: \"12345678\",\n        merchantName: \"Demo Merchant\"\n      },\n      transactionInfo: {\n        totalPriceStatus: \"FINAL\",\n        totalPriceLabel: \"Total\",\n        totalPrice: grandTotal.toString(),\n        currencyCode: \"USD\",\n        countryCode: \"US\"\n      },\n      shippingAddressRequired: true,\n      callbackIntents: [\"PAYMENT_AUTHORIZATION\"]\n    },\n    onLoadPaymentData: paymentRequest => paymentRequest,\n    onPaymentAuthorized: paymentData => {\n      console.log(\"a\", paymentData);\n      return {\n        transactionState: \"SUCCESS\"\n      };\n    },\n    existingPaymentMethodRequired: \"false\",\n    buttonColor: \"Black\",\n    buttonType: \"Buy\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n\n  function bigTotal(price) {\n    let subTotal = grandTotal + price; //  console.log(subTotal)\n    //   setGrandTotal(subTotal)\n  }\n\n  function makeGrandTotal(cartData) {\n    if (cartData) {\n      for (let i of Object.keys(cartData)) {\n        let url = '/items/' + i;\n        fetch(url).then(res => res.json()).then(data => {\n          console.log(data.price, i);\n        });\n      }\n    }\n  }\n\n  function getPrice() {}\n\n  function makeItems(cartData) {\n    if (cartData) {\n      setCartItems(Object.keys(cartData).map(i => /*#__PURE__*/_jsxDEV(CartItem, {\n        bigTotal: bigTotal,\n        item: i,\n        amount: cartData[i],\n        redoItems: redoItems\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 57\n      }, this)));\n    }\n  }\n\n  function redoItems() {\n    setCartItems([]);\n    grabCart();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"middleText\",\n      children: \"Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), cartItems, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), \"Grand Total: $\", grandTotal, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: gpButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cart, \"CmffkgNt4Jo5zE8wjiUUFioQIWY=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","CartItem","GooglePayButton","Cart","cartItems","setCartItems","grandTotal","setGrandTotal","grabCart","fetch","then","res","json","data","makeItems","makeGrandTotal","gpButton","apiVersion","apiVersionMinor","allowedPaymentMethods","type","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","GatewayMerchantId","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","totalPrice","toString","currencyCode","countryCode","shippingAddressRequired","callbackIntents","paymentRequest","paymentData","console","log","transactionState","bigTotal","price","subTotal","cartData","i","Object","keys","url","getPrice","map","redoItems"],"sources":["/home/dan/code/projects/project4/frontend/src/checkout/Cart.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport CartItem from './CartItem.js'\n\nimport GooglePayButton from '@google-pay/button-react'\n\nfunction Cart() {\n\n    let [cartItems, setCartItems] = useState([])\n    let [grandTotal, setGrandTotal] = useState(0.00)\n   \n    \n\n    useEffect(()  => {\n    grabCart()\n}, [])\n\n    function grabCart() {\n        fetch('/getcart/')\n        .then(res => res.json())\n        .then((data) => {\n            makeItems(data)\n            makeGrandTotal(data)\n        })\n    }\n\n    let gpButton = (\n                \n        <GooglePayButton\n        className=\"centered\"\n            environment=\"TEST\"\t\t\t//TEST or PRODUCTION\n            paymentRequest={{\n                apiVersion:2,\n                apiVersionMinor:0,\n                allowedPaymentMethods:[\n                    {\n                        type:\"CARD\",\n                        parameters: {\n                            allowedAuthMethods:[\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n                            allowedCardNetworks:[\"MASTERCARD\", \"VISA\"]\n                        },\n\n                        tokenizationSpecification:{\n                            type:\"PAYMENT_GATEWAY\",\n                            parameters:{\n                                gateway:\"example\",\n                                GatewayMerchantId:\"example\"\n                            }\n                        }\n                    }\n                ],\n                    \n                            merchantInfo:{\n                                merchantId:\"12345678\",\n                                merchantName:\"Demo Merchant\"\n                            },\n\n                            transactionInfo:{\n                                totalPriceStatus:\"FINAL\",\n                                totalPriceLabel:\"Total\",\n                                totalPrice:grandTotal.toString(),\n                                currencyCode:\"USD\",\n                                countryCode:\"US\"\n                            },\n                            shippingAddressRequired:true,\n                            callbackIntents:[\"PAYMENT_AUTHORIZATION\"]\n                        }}\n\n                        onLoadPaymentData={paymentRequest => paymentRequest }\n                        onPaymentAuthorized={paymentData => {\n                            console.log(\"a\", paymentData)\n                            return { transactionState: \"SUCCESS\" }\n                        }}\n                        existingPaymentMethodRequired=\"false\"\n                        buttonColor=\"Black\"\n                        buttonType=\"Buy\"\n\n            >\n                </GooglePayButton>\n            )\n\n\n            function bigTotal(price) {\n                let subTotal = grandTotal + price\n              //  console.log(subTotal)\n             //   setGrandTotal(subTotal)\n            }\n\n            function makeGrandTotal(cartData) {\n                if (cartData) {   for (let i of Object.keys(cartData)) { \n                    let url = '/items/' + i\n                    fetch(url)\n                    .then(res => res.json())\n                    .then(data => { \n                      console.log(data.price, i)\n                            \n                            \n                    \n                    }) }\n                    \n                }\n            }\n\n            function getPrice() {\n\n            }\n\n\n    function makeItems(cartData) {\n        \n        if (cartData) { \n           setCartItems (Object.keys(cartData).map(i => <CartItem bigTotal={bigTotal} item={i} amount={cartData[i]} redoItems={redoItems}  key={i} />) )\n        }\n    }\n\n    function redoItems() {\n        setCartItems([])\n        grabCart()\n    }\n\n\n\n    return(\n        <div>\n            <h1 className='middleText'>Cart</h1>\n            {cartItems}\n            <br />\n            Grand Total: ${grandTotal}\n            <div>{gpButton}</div>\n\n\n        </div>\n    )\n}\n\nexport default Cart"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,OAAOC,eAAP,MAA4B,0BAA5B;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EAEZ,IAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAAxC;EACA,IAAI,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA1C;EAIAC,SAAS,CAAC,MAAO;IACjBQ,QAAQ;EACX,CAFY,EAEV,EAFU,CAAT;;EAIA,SAASA,QAAT,GAAoB;IAChBC,KAAK,CAAC,WAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;MACZC,SAAS,CAACD,IAAD,CAAT;MACAE,cAAc,CAACF,IAAD,CAAd;IACH,CALD;EAMH;;EAED,IAAIG,QAAQ,gBAER,QAAC,eAAD;IACA,SAAS,EAAC,UADV;IAEI,WAAW,EAAC,MAFhB,CAEyB;IAFzB;IAGI,cAAc,EAAE;MACZC,UAAU,EAAC,CADC;MAEZC,eAAe,EAAC,CAFJ;MAGZC,qBAAqB,EAAC,CAClB;QACIC,IAAI,EAAC,MADT;QAEIC,UAAU,EAAE;UACRC,kBAAkB,EAAC,CAAC,UAAD,EAAa,gBAAb,CADX;UAERC,mBAAmB,EAAC,CAAC,YAAD,EAAe,MAAf;QAFZ,CAFhB;QAOIC,yBAAyB,EAAC;UACtBJ,IAAI,EAAC,iBADiB;UAEtBC,UAAU,EAAC;YACPI,OAAO,EAAC,SADD;YAEPC,iBAAiB,EAAC;UAFX;QAFW;MAP9B,CADkB,CAHV;MAqBAC,YAAY,EAAC;QACTC,UAAU,EAAC,UADF;QAETC,YAAY,EAAC;MAFJ,CArBb;MA0BAC,eAAe,EAAC;QACZC,gBAAgB,EAAC,OADL;QAEZC,eAAe,EAAC,OAFJ;QAGZC,UAAU,EAAC3B,UAAU,CAAC4B,QAAX,EAHC;QAIZC,YAAY,EAAC,KAJD;QAKZC,WAAW,EAAC;MALA,CA1BhB;MAiCAC,uBAAuB,EAAC,IAjCxB;MAkCAC,eAAe,EAAC,CAAC,uBAAD;IAlChB,CAHpB;IAwCgB,iBAAiB,EAAEC,cAAc,IAAIA,cAxCrD;IAyCgB,mBAAmB,EAAEC,WAAW,IAAI;MAChCC,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,WAAjB;MACA,OAAO;QAAEG,gBAAgB,EAAE;MAApB,CAAP;IACH,CA5CjB;IA6CgB,6BAA6B,EAAC,OA7C9C;IA8CgB,WAAW,EAAC,OA9C5B;IA+CgB,UAAU,EAAC;EA/C3B;IAAA;IAAA;IAAA;EAAA,QAFJ;;EAwDQ,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;IACrB,IAAIC,QAAQ,GAAGxC,UAAU,GAAGuC,KAA5B,CADqB,CAEvB;IACD;EACA;;EAED,SAAS9B,cAAT,CAAwBgC,QAAxB,EAAkC;IAC9B,IAAIA,QAAJ,EAAc;MAAI,KAAK,IAAIC,CAAT,IAAcC,MAAM,CAACC,IAAP,CAAYH,QAAZ,CAAd,EAAqC;QACnD,IAAII,GAAG,GAAG,YAAYH,CAAtB;QACAvC,KAAK,CAAC0C,GAAD,CAAL,CACCzC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;UACZ4B,OAAO,CAACC,GAAR,CAAY7B,IAAI,CAACgC,KAAjB,EAAwBG,CAAxB;QAID,CAPD;MAOI;IAEP;EACJ;;EAED,SAASI,QAAT,GAAoB,CAEnB;;EAGT,SAAStC,SAAT,CAAmBiC,QAAnB,EAA6B;IAEzB,IAAIA,QAAJ,EAAc;MACX1C,YAAY,CAAE4C,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBM,GAAtB,CAA0BL,CAAC,iBAAI,QAAC,QAAD;QAAU,QAAQ,EAAEJ,QAApB;QAA8B,IAAI,EAAEI,CAApC;QAAuC,MAAM,EAAED,QAAQ,CAACC,CAAD,CAAvD;QAA4D,SAAS,EAAEM;MAAvE,GAAwFN,CAAxF;QAAA;QAAA;QAAA;MAAA,QAA/B,CAAF,CAAZ;IACF;EACJ;;EAED,SAASM,SAAT,GAAqB;IACjBjD,YAAY,CAAC,EAAD,CAAZ;IACAG,QAAQ;EACX;;EAID,oBACI;IAAA,wBACI;MAAI,SAAS,EAAC,YAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKJ,SAFL,eAGI;MAAA;MAAA;MAAA;IAAA,QAHJ,oBAImBE,UAJnB,eAKI;MAAA,UAAMU;IAAN;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;GA/HQb,I;;KAAAA,I;AAiIT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}