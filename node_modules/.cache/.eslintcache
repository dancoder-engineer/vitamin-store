[{"/home/dan/code/projects/project4/src/index.js":"1","/home/dan/code/projects/project4/src/Test.js":"2","/home/dan/code/projects/project4/src/reportWebVitals.js":"3","/home/dan/code/projects/project4/src/App.js":"4","/home/dan/code/projects/project4/src/LogPages/DeleteAcct.js":"5","/home/dan/code/projects/project4/src/LogPages/LogIn.js":"6","/home/dan/code/projects/project4/src/LogPages/NewUser.js":"7","/home/dan/code/projects/project4/src/checkout/Cart.js":"8","/home/dan/code/projects/project4/src/checkout/OrderDone.js":"9","/home/dan/code/projects/project4/src/LogPages/LogOut.js":"10","/home/dan/code/projects/project4/src/MainStore/ItemPage.js":"11","/home/dan/code/projects/project4/src/MainStore/Header.js":"12","/home/dan/code/projects/project4/src/MainStore/Card.js":"13","/home/dan/code/projects/project4/src/checkout/CartItem.js":"14"},{"size":1681,"mtime":1667241949150,"results":"15","hashOfConfig":"16"},{"size":1340,"mtime":1667154974741,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1667154974741,"results":"18","hashOfConfig":"16"},{"size":1194,"mtime":1667154974731,"results":"19","hashOfConfig":"16"},{"size":952,"mtime":1667154974731,"results":"20","hashOfConfig":"16"},{"size":1519,"mtime":1667242045100,"results":"21","hashOfConfig":"16"},{"size":1979,"mtime":1667523817498,"results":"22","hashOfConfig":"16"},{"size":7121,"mtime":1667154974741,"results":"23","hashOfConfig":"16"},{"size":670,"mtime":1667154974741,"results":"24","hashOfConfig":"16"},{"size":415,"mtime":1667242045100,"results":"25","hashOfConfig":"16"},{"size":6548,"mtime":1668871185949,"results":"26","hashOfConfig":"16"},{"size":2031,"mtime":1667322556700,"results":"27","hashOfConfig":"16"},{"size":628,"mtime":1667154974731,"results":"28","hashOfConfig":"16"},{"size":2438,"mtime":1667254165630,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"1492z8k",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"34"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"34"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"34"},"/home/dan/code/projects/project4/src/index.js",["82"],[],"import React, {useState} from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport ItemPage from './MainStore/ItemPage.js'\nimport App from './App';\nimport Test from './Test.js'\nimport reportWebVitals from './reportWebVitals';\n\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\"\nimport LogOut from './LogPages/LogOut.js'\nimport LogIn from './LogPages/LogIn.js'\nimport NewUser from './LogPages/NewUser.js'\nimport Cart from './checkout/Cart.js'\nimport OrderDone from './checkout/OrderDone.js'\nimport DeleteAcct from './LogPages/DeleteAcct.js'\n\n\nconst url=\"\"\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n<script\n  async\n  src=\"https://pay.google.com/gp/p/js/pay.js\"\n  onload=\"onGooglePayLoaded()\"\n></script>\n\n\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path='/' element={<App url={url} />} />\n        <Route path='/item/:id' element={<ItemPage url={url} />} />\n        <Route path='/test/' element={<Test />} />\n        <Route path='/logout/' element={<LogOut />} /> \n        <Route path='/login/' element={<LogIn />} />\n        <Route path='/newuser/' element={ <NewUser /> } />\n        <Route path='/cart/' element= { <Cart /> } />\n        <Route path='/orderdone/' element={ <OrderDone /> } />\n        <Route path='/deleteacct/' element={ <DeleteAcct /> } />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n//login, logout, newuser\n",[],"/home/dan/code/projects/project4/src/Test.js",["83"],[],"import React from \"react\"\nimport GooglePayButton from '@google-pay/button-react'\n\n\nfunction Test({}) {\n\tlet price = 9.00\n\nreturn (\n    <div>\n\n<GooglePayButton\n\tenvironment=\"TEST\"\t\t\t//TEST or PRODUCTION\n\tpaymentRequest={{\n\t\tapiVersion:2,\n\t\tapiVersionMinor:0,\n\t\tallowedPaymentMethods:[\n\t\t\t{\n\t\t\t\ttype:\"CARD\",\n\t\t\t\tparameters: {\n\t\t\t\t\tallowedAuthMethods:[\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n\t\t\t\t\tallowedCardNetworks:[\"MASTERCARD\", \"VISA\"]\n\t\t\t\t},\n\n\t\t\t\ttokenizationSpecification:{\n\t\t\t\t\ttype:\"PAYMENT_GATEWAY\",\n\t\t\t\t\tparameters:{\n\t\t\t\t\t\tgateway:\"example\",\n\t\t\t\t\t\tGatewayMerchantId:\"example\"\n\t\t\t\t\t}\n                }\n            }\n        ],\n            \n\t\t\t\t\tmerchantInfo:{\n\t\t\t\t\t\tmerchantId:\"12345678\",\n\t\t\t\t\t\tmerchantName:\"Demo Merchant\"\n\t\t\t\t\t},\n\n\t\t\t\t\ttransactionInfo:{\n\t\t\t\t\t\ttotalPriceStatus:\"FINAL\",\n\t\t\t\t\t\ttotalPriceLabel:\"Total\",\n\t\t\t\t\t\ttotalPrice:price.toString(),\n\t\t\t\t\t\tcurrencyCode:\"USD\",\n\t\t\t\t\t\tcountryCode:\"US\"\n\t\t\t\t\t},\n\t\t\t\t\tshippingAddressRequired:true,\n\t\t\t\t\tcallbackIntents:[\"PAYMENT_AUTHORIZATION\"]\n\t\t\t\t}}\n\n\t\t\t\tonLoadPaymentData={paymentRequest => paymentRequest }\n\t\t\t\tonPaymentAuthorized={paymentData => {\n\t\t\t\t\tconsole.log(\"a\", paymentData)\n\t\t\t\t\treturn { transactionState: \"SUCCESS\" }\n\t\t\t\t}}\n\t\t\t\texistingPaymentMethodRequired=\"false\"\n\t\t\t\tbuttonColor=\"Black\"\n\t\t\t\tbuttonType=\"Buy\"\n\n\t>\n\t\t</GooglePayButton>\n\n    </div>\n)\n}\n\nexport default Test\n\n\n\n\n\n\n\n","/home/dan/code/projects/project4/src/reportWebVitals.js",[],[],"/home/dan/code/projects/project4/src/App.js",["84"],[],"//import logo from './logo.svg';\nimport React, {useState, useEffect} from 'react'\n\nimport Card from './MainStore/Card.js'\nimport Header from './MainStore/Header.js'\n\n\nimport './App.css';\nfunction App({}) {\n\nlet [items, setItems] = useState([])\n\nlet [user, setUser] = useState([])\n\n\nfunction youGetMe() {\n\n  fetch(\"/getme/\")\n  .then(res => res.json())\n  .then(data => setUser(data))\n}\n\n\n\nfunction searchFunc(a) {\n  if (!a) {return 0}\n // console.log(\"http://127.0.0.1:5000/searchitems/\" + a)\n  fetch(\"/searchitems/\" + a)\n.then(res => res.json())\n.then(data => { console.log(data)\n  setItems(data.map((i) => <Card key={i.id} itemData={i} className=\"cardDiv\"/>))\n}\n)\n}\n\nfunction getFeaturedItems() {\n  fetch(\"/featureditems/\")\n.then(res => res.json())\n.then(data => { //console.log(data)\n  setItems(data.map((i) => <Card key={i.id} itemData={i} className=\"cardDiv\"/>))\n\n})\n}\n\nuseEffect(() => {\n  getFeaturedItems()\n  youGetMe()\n}, []\n\n)\n\n\n\n\n  return (\n    <div className=\"mainStore\">\n      <div className=\"things\">\n        <Header searchFunc={searchFunc} search={1} user={user} />\n        <div className=\"cardsHolder\">{items && items}</div>\n\n        \n    </div></div>\n\n  );\n}\n\nexport default App;\n","/home/dan/code/projects/project4/src/LogPages/DeleteAcct.js",["85"],[],"import React, { useState, useEffect } from \"react\";\nimport {NavLink} from 'react-router-dom'\n\nfunction DeleteAcct() {\n\n    let [message, setMessage] = useState(null)\n\n    useEffect(() => {\n       if (!message) { youGetMe() }\n    }, [])\n\n\n    function youGetMe() {\n\n        fetch(\"/getme/\")\n        .then(res => res.json())\n        .then(data => { //console.log(data)\n            if(data) {deleteUser(\"/users/\" + data.id)}\n        })\n      }\n\n    function deleteUser(url) {\n        fetch(url, {method: 'DELETE'})\n     //   .then(res => res.json())\n        .then(data => {\n         //   console.log(data)\n            setMessage(\"Your account has been deleted.\")\n        })\n\n\n    }\n\n\n\n    return(\n        <div>\n            {message && ( <div>\n            <p>{message}</p>\n            <br />\n            <NavLink to=\"/\">Please click here to go back to the store.</NavLink>\n            </div>\n            )}\n        </div>\n    )\n}\n\nexport default DeleteAcct","/home/dan/code/projects/project4/src/LogPages/LogIn.js",["86"],[],"import React from 'react'\nimport {useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\n\nimport './LogPages.css'\n\nfunction LogIn() {\n    let [faild, setFaild] = useState(\"\")\n\n    const history = useNavigate() \n\n    let [submitIt, setSubmitIt] = useState({\n        username: \"\",\n        password: \"\"\n    })\n\n\n    function handleChange(e) {\n        const name = e.target.name\n        const value = e.target.value\n\n        setSubmitIt({\n            ...submitIt,\n            [name]: value\n    })\n\n    }\n\n    function handleLogIn() {\n\n        let fullurl = \"/login/\"\n        fetch(\"/loginback/\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify(submitIt)\n        })\n        .then(res => res.json())\n        .then(data => { \n    //        console.log(data)\n            if(data === null) {\n                setFaild (\"User name or password incorrect.\")               \n            } else {\n                history('../')\n            }\n        }\n        )\n}\n\n\n\n\nreturn(\n    \n    <div className=\"mainDiv\">\n        <h2>Log In</h2><br />\n        User Name:<br /><input type=\"text\" name=\"username\" onChange={handleChange}/><br />\n        Password:<br /><input type=\"password\" name=\"password\" onChange={handleChange}/><br />\n        <button onClick={handleLogIn}>Log In</button>\n        <br /> <br />\n        <p>{faild}</p>\n    </div>\n\n    \n    )\n\n}\n\nexport default LogIn","/home/dan/code/projects/project4/src/LogPages/NewUser.js",[],[],"/home/dan/code/projects/project4/src/checkout/Cart.js",["87","88","89","90","91"],[],"import React, {useState, useEffect} from 'react'\nimport CartItem from './CartItem.js'\nimport {useNavigate} from 'react-router-dom'\n\nimport GooglePayButton from '@google-pay/button-react'\n\nimport Header from '../MainStore/Header.js'\nimport './checkout.css'\n\nfunction Cart() {\n\n    const history = useNavigate() \n    let [cartItems, setCartItems] = useState([])\n    let [subtotal, setSubtotal] = useState(0.00)\n    let [grandTotal, setGrandTotal] = useState(0.00)\n    let [paymentInfo, setPaymentInfo] = useState({})\n    let [user, setUser] = useState(null)\n    let [cart, setCart] = useState([]) //this may not be good, but the cart dats isnt set otherwise\n    let salesTax = .085\n    let userId = 0\n\n //   useEffect(() => grabCart(), [])\n\n    useEffect(() => setGrandTotal((subtotal * (salesTax + 1)).toFixed(2)), [subtotal])\n   \n    useEffect(() => \n    \n       { if (paymentInfo.paymentMethodData) {\n        completeOrder(paymentInfo) }\n        }, [paymentInfo] )\n\n    useEffect(()  => { \n    grabCart()\n    youGetMe(\"/getme/\")\n\n\n}, [])\n\nfunction youGetMe(url) {\n\n    fetch(url)\n    .then(res => res.json())\n    .then(data => {//  console.log(data)\n     // console.log(data)\n        setUser(data) \n    })\n  }\n\n\n\n\n    function completeOrder(paymentData) {\n\n        let submitIt = {\n            user_id: user.id,\n            fulfilled: \"Ordered\",\n            fulfilled_by: 0,\n            subtotal: subtotal,\n            stax: salesTax,\n            grandtotal: grandTotal\n        }\n\n\n  //      console.log(paymentData)\n        let fullurl = \"/orders/\"\n        fetch(fullurl, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify(submitIt)\n        })\n        .then(res => res.json())\n        .then(data => { //console.log(data)\n            makeOrderItems(data.id)\n          \n            history('../orderdone')\n           \n            })\n    }\n\n    function makeOrderItems(orderID) { \n        for (let i of Object.keys(cart)) {\n           let submitIt = {\n                item_id: i,\n                amount: cart[i],\n                order_id: orderID\n            }\n\n            fetch(\"/orderitems/\", {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"POST\",\n                body: JSON.stringify(submitIt)\n            })\n            .then(res => res.json())\n            .then(data => { \n                //console.log(data)\n                })\n\n\n        }\n        \n    }\n\n\n    function grabCart() {\n        fetch('/getcart/')\n        .then(res => res.json())\n        .then((data) => {\n            makeGrandTotal(data)\n            setCart(data)\n            makeItems(data)\n            \n            \n        })\n    }\n\n    let gpButton = (\n                \n        <GooglePayButton\n        className=\"centered\"\n            environment=\"TEST\"\t\t\t//TEST or PRODUCTION\n            paymentRequest={{\n                apiVersion:2,\n                apiVersionMinor:0,\n                allowedPaymentMethods:[\n                    {\n                        type:\"CARD\",\n                        parameters: {\n                            allowedAuthMethods:[\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n                            allowedCardNetworks:[\"MASTERCARD\", \"VISA\"]\n                        },\n\n                        tokenizationSpecification:{\n                            type:\"PAYMENT_GATEWAY\",\n                            parameters:{\n                                gateway:\"example\",\n                                GatewayMerchantId:\"example\"\n                            }\n                        }\n                    }\n                ],\n                    \n                            merchantInfo:{\n                                merchantId:\"12345678\",\n                                merchantName:\"Demo Merchant\"\n                            },\n\n                            transactionInfo:{\n                                totalPriceStatus:\"FINAL\",\n                                totalPriceLabel:\"Total\",\n                                totalPrice:grandTotal.toString(),\n                                currencyCode:\"USD\",\n                                countryCode:\"US\"\n                            },\n                            shippingAddressRequired:true,\n//                            shippingOptionRequired:true,\n//                            shippingOptionParameters:storeService.getShippingOptionParamaters(),\n //                           callbackIntents:[\"PAYMENT_AUTHORIZATION\", 'SHIPPING_ADDRESS', 'SHIPPING_OPTION']\n//                                 callbackIntents:[\"PAYMENT_AUTHORIZATION\"]\n}}\n\n                        onLoadPaymentData={paymentRequest => {\n                            console.log(\"b\", paymentRequest)\n                            setPaymentInfo(paymentRequest)\n                            return { transactionState: \"SUCCESS\" }\n                         } }\n//                        onPaymentAuthorized={paymentData => {\n                        //    console.log(\"a\", paymentData)\n                           // setPaymentInfo(paymentData)\n//                            return { transactionState: \"SUCCESS\" }\n//                            return paymentData\n//                        }}\n                        existingPaymentMethodRequired=\"false\"\n                        buttonColor=\"Black\"\n                        buttonType=\"Buy\"\n\n            >\n                </GooglePayButton>\n            )\n\n\n\n            function makeGrandTotal(cartData) {\n                let total = 0.00\n                let iterations = 0\n                if (Object.keys(cartData).length === 0) { setSubtotal(0) }\n                for (let i of Object.keys(cartData)) {\n                    let url = '/items/' + i\n                    fetch(url)\n                    .then(res => res.json())\n                    .then(data => { \n                        iterations += 1\n                        let subPrice = data.price * cartData[i]\n                        total = subPrice + total\n                        if (iterations === Object.keys(cartData).length)    { setSubtotal(total.toFixed(2)) }\n                    })\n                }\n            }\n\n\n\n\n    function makeItems(cartData) {\n        \n        if (cartData) { \n           setCartItems (Object.keys(cartData).map(i => <CartItem item={i} amount={cartData[i]} redoItems={redoItems}  key={i} />) )\n        }\n    }\n\n    function redoItems() {\n        setCartItems([])\n        grabCart()\n    }\n\n//console.log(user && subtotal > 0)\n\n    return(\n        <div>\n            <Header search={0} user={user} />\n            <h1 className='middleText'>Cart</h1>\n            {cartItems}\n            <br />\n            <div className='gpButton'>\n                Subtotal: ${subtotal}<br />\n                Sales Tax: {salesTax * 100}%<br />\n                Total: ${grandTotal}<br /><br />\n                {(user && subtotal > 0) ? gpButton : null}\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Cart","/home/dan/code/projects/project4/src/checkout/OrderDone.js",[],[],"/home/dan/code/projects/project4/src/LogPages/LogOut.js",[],[],"/home/dan/code/projects/project4/src/MainStore/ItemPage.js",["92","93","94","95","96","97","98","99"],[],"/home/dan/code/projects/project4/src/MainStore/Header.js",["100"],[],"import React, {useState} from \"react\"\nimport {NavLink} from 'react-router-dom'\n\nimport \"./MainStore.css\"\n\nfunction Header({searchFunc, search, user}) {\n\n  // console.log(user)\n\n let logo =  <img src=\"https://imgur.com/270UZZw.png\" title='Complaining Stone Medicinals' alt=\"Naturally Healthy Vitamins\" className=\"logo\"/>\n let loginPic =  <img src=\"https://imgur.com/KEAhj4f.png\" title='Log In' alt=\"Log In\" className=\"headerImage\"/>\n let newUserPic =  <img src=\"https://imgur.com/PwulKQd.png\" title='Create New User' alt=\"Create New User\" className=\"headerImage\"/>\n let cartPic =  <img src=\"https://imgur.com/DSmAqNY.png\" title='Cart' alt=\"Cart\" className=\"headerImage\"/>\n let logOutPic =  <img src=\"https://imgur.com/LslMJRx.png\" title='Log Out' alt=\"Log Out\" className=\"headerImage\"/>\n \n\n\n \n\n    \n    \n\n    let loggedInPart = (\n        <div className=\"hello\"><NavLink to=\"../\">{logo}</NavLink>  \n        <NavLink to=\"../logout\">{logOutPic}</NavLink>  <NavLink to=\"../cart\">{cartPic}</NavLink> </div>\n    )\n\n    let loggedOutPart = (\n        <div>\n           <NavLink to=\"../\">{logo}</NavLink>   <NavLink to=\"../login\">{loginPic}</NavLink>     <NavLink to=\"../newuser\">{newUserPic}</NavLink>     <NavLink to=\"../cart\">{cartPic}</NavLink>\n        </div>\n    )\n\n\n    let searchTerm = \"\"\n\n    let searchBar = (<div></div>)\n    if (search === 1) { searchBar = (\n        <div>\n            <label htmlFor=\"searchTerm\">Search: </label>\n            <input type=\"text\" className=\"searchTerm\" id=\"searchTerm\" onKeyPress={(e) => keyp(e.code)} onChange={e => changeSearch(e)}/>\n            <button id=\"startSearch\" onClick={ () => searchFunc(searchTerm) } >Search</button>\n        </div>\n    )\n    }\n\n\n\n\n\n\n    function changeSearch(e){\n        searchTerm = (e.target.value)\n    }\n\n    function keyp(e){\n        if (e===\"Enter\"){\n            searchFunc(searchTerm)\n    }\n    }\n    return(\n        <div className=\"headerDiv\">\n            {user ? loggedInPart : loggedOutPart}\n            {searchBar}\n        </div>\n    )\n}\n\nexport default Header","/home/dan/code/projects/project4/src/MainStore/Card.js",["101"],[],"import React from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport \"./MainStore.css\"\n\n\nfunction Card({itemData}) {\n//console.log(itemData)\nlet fullurl = \"/item/\"+itemData.id\n//console.log(url, fullurl)\nreturn (\n    <div className=\"card\"><NavLink to={fullurl}>\n        <p className=\"cardText\">{itemData.brand}<br />{itemData.productname}<br /></p>\n        <img className=\"cardPic\" src={itemData.picurl} />\n        <p className=\"cardText\">\n            Contains {itemData.pillamount} {itemData.dose} {itemData.pilltype.toLowerCase()}<br /> <br /> ${itemData.price}\n        </p>\n    </NavLink></div>\n)\n\n}\n\nexport default Card","/home/dan/code/projects/project4/src/checkout/CartItem.js",["102","103"],[],"import React, {useState, useEffect} from 'react'\nimport './checkout.css'\n\nfunction CartItem({item, amount, redoItems, bigTotal}) {\n\n    let [itemData, setItemData] = useState({})\n    let [errorMessage, setErrorMessage] = useState(\" \")\n    let [amt, setAmt] = useState(amount)\n    \n\n    const boxId = \"productQuantity\" + itemData.id\n\n\n\n    useEffect( () => {\n        grabItem()\n    }, [])\n\n    function grabItem() {\n        let url = '/items/' + item\n        fetch(url)\n        .then(res => res.json())\n        .then(data => { \n            setItemData(data)\n        })\n    }\n\n    \nfunction addToCart(del = 0) {\n    let fullurl = \"/updatecart/\"\n    let dat = {\n        id: item,\n        amount: amt}\n    if (del === 1) {dat.amount = 0}\n    fetch(fullurl, {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify(dat)\n    })\n    .then(res => res.json())\n    .then(data => {\n        \n        if (data.error) {\n        //    console.log(data)\n\n            document.querySelector('#' + boxId).value = data.old\n            setErrorMessage(data.error)\n            setAmt(data.old)\n        } else {\n            setErrorMessage(\" \")\n            redoItems()\n        }\n    \n    \n    })\n}\n \nfunction deleteFromCart() {\n    addToCart(1)\n}\n\nfunction changeAmt(e){\n    if (parseInt(e.target.value) < 0) (e.target.value = '0')\n    setAmt(e.target.value)\n}\n\nfunction getTotal(amount, price) {\n    let total = amount * parseFloat(price)\n\n    return total.toFixed(2)\n}\n\n\n\n    return(\n        <div>\n        {itemData && ( <div className= 'CartItem'>  <div className=\"CartItemPic\"><img className='itemPic' src={itemData.picurl} /> </div>\n        <div className='CartItemData'> {itemData.name}<br />\n        Quantity: <input type=\"number\" id={boxId} className=\"quantity\" defaultValue={amount} onChange={changeAmt} />\n                <button onClick={addToCart} className=\"buttn\">Update Amount</button><button className=\"buttn\" onClick={deleteFromCart}>Remove from Cart</button> <br />\n                <div className='prices'><span className='justifyLeft'>Unit Price ${itemData.price}</span>   <span className='justifyRight'>Total Price: ${getTotal(amount, itemData.price)}</span></div>\n                <p>{errorMessage}</p>\n          \n\n        </div>\n\n        </div>\n        \n        \n        )}\n\n        </div>\n    )\n}\n\nexport default CartItem",{"ruleId":"104","severity":1,"message":"105","line":1,"column":16,"nodeType":"106","messageId":"107","endLine":1,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":5,"column":15,"nodeType":"110","messageId":"111","endLine":5,"endColumn":17},{"ruleId":"108","severity":1,"message":"109","line":9,"column":14,"nodeType":"110","messageId":"111","endLine":9,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":10,"column":8,"nodeType":"114","endLine":10,"endColumn":10,"suggestions":"115"},{"ruleId":"104","severity":1,"message":"116","line":31,"column":13,"nodeType":"106","messageId":"107","endLine":31,"endColumn":20},{"ruleId":"104","severity":1,"message":"117","line":20,"column":9,"nodeType":"106","messageId":"107","endLine":20,"endColumn":15},{"ruleId":"112","severity":1,"message":"118","line":24,"column":76,"nodeType":"114","endLine":24,"endColumn":86,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"120","line":30,"column":12,"nodeType":"114","endLine":30,"endColumn":25,"suggestions":"121"},{"ruleId":"112","severity":1,"message":"122","line":37,"column":4,"nodeType":"114","endLine":37,"endColumn":6,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":196,"column":27,"nodeType":"126","messageId":"127","endLine":201,"endColumn":22},{"ruleId":"108","severity":1,"message":"109","line":8,"column":19,"nodeType":"110","messageId":"111","endLine":8,"endColumn":21},{"ruleId":"104","severity":1,"message":"128","line":57,"column":9,"nodeType":"106","messageId":"107","endLine":57,"endColumn":12},{"ruleId":"104","severity":1,"message":"129","line":98,"column":14,"nodeType":"106","messageId":"107","endLine":98,"endColumn":15},{"ruleId":"112","severity":1,"message":"130","line":100,"column":6,"nodeType":"114","endLine":100,"endColumn":12,"suggestions":"131"},{"ruleId":"112","severity":1,"message":"132","line":115,"column":4,"nodeType":"114","endLine":115,"endColumn":6,"suggestions":"133"},{"ruleId":"104","severity":1,"message":"134","line":173,"column":10,"nodeType":"106","messageId":"107","endLine":173,"endColumn":21},{"ruleId":"104","severity":1,"message":"135","line":221,"column":10,"nodeType":"106","messageId":"107","endLine":221,"endColumn":18},{"ruleId":"136","severity":1,"message":"137","line":239,"column":17,"nodeType":"138","endLine":239,"endColumn":82},{"ruleId":"104","severity":1,"message":"105","line":1,"column":16,"nodeType":"106","messageId":"107","endLine":1,"endColumn":24},{"ruleId":"136","severity":1,"message":"137","line":13,"column":9,"nodeType":"138","endLine":13,"endColumn":58},{"ruleId":"112","severity":1,"message":"139","line":17,"column":8,"nodeType":"114","endLine":17,"endColumn":10,"suggestions":"140"},{"ruleId":"136","severity":1,"message":"137","line":80,"column":82,"nodeType":"138","endLine":80,"endColumn":131},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'message' and 'youGetMe'. Either include them or remove the dependency array.","ArrayExpression",["141"],"'fullurl' is assigned a value but never used.","'userId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'salesTax'. Either include it or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'completeOrder'. Either include it or remove the dependency array.",["143"],"React Hook useEffect has a missing dependency: 'grabCart'. Either include it or remove the dependency array.",["144"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'iterations', 'total', 'total', 'iterations', 'total'.","ArrowFunctionExpression","unsafeRefs","'dat' is assigned a value but never used.","'i' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getitemData' and 'reviews'. Either include them or remove the dependency array.",["145"],"React Hook useEffect has missing dependencies: 'createCartSlot', 'getitemData', 'grabCart', and 'youGetMe'. Either include them or remove the dependency array.",["146"],"'buttonClick' is defined but never used.","'byLetter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'grabItem'. Either include it or remove the dependency array.",["147"],{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [message, youGetMe]",{"range":"162","text":"163"},"Update the dependencies array to be: [salesTax, subtotal]",{"range":"164","text":"165"},"Update the dependencies array to be: [completeOrder, paymentInfo]",{"range":"166","text":"167"},"Update the dependencies array to be: [grabCart]",{"range":"168","text":"169"},"Update the dependencies array to be: [getitemData, reviews, user]",{"range":"170","text":"171"},"Update the dependencies array to be: [createCartSlot, getitemData, grabCart, youGetMe]",{"range":"172","text":"173"},"Update the dependencies array to be: [grabItem]",{"range":"174","text":"175"},[232,234],"[message, youGetMe]",[814,824],"[salesTax, subtotal]",[950,963],"[completeOrder, paymentInfo]",[1035,1037],"[grabCart]",[2220,2226],"[getitemData, reviews, user]",[2402,2404],"[createCartSlot, getitemData, grabCart, youGetMe]",[384,386],"[grabItem]"]